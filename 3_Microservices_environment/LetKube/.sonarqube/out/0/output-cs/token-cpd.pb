Í
^F:\Work\LetsKubeGit\Lets-Kube\3_Microservices_environment\LetKube\LetsKube\ContainerService.cs
	namespace 	
LetsKube
 
{ 
[ 
ApiController 
] 
[		 
Route		 
(		 
$str		 
)		 
]		 
public

 
class

 
ContainerService

 
:

  
ControllerBase

! /
{ 
private 	
static
 
readonly 
Guid 
ServiceIdentity .
=/ 0
Guid1 5
.5 6
NewGuid6 =
(= >
)> ?
;? @
private 	
readonly
 
ILogger 
_logger "
=# $

LogManager% /
./ 0!
GetCurrentClassLogger0 E
(E F
)F G
;G H
[ 
HttpGet 

(
 
$str 
) 
] 
public 
string	 
GetHelloWorld 
( 
) 
{  !
var 
helloMessage 
= 
$" 
$str )
{) *
ServiceIdentity* 9
}9 :
$str: <
"< =
;= >
_logger 

.
 
Info 
( 
helloMessage 
) 
; 
return 	
helloMessage
 
; 
} 
[ 
HttpGet 

(
 
$str 
) 
] 
public 
string	 -
!GetHelloWorldFromAnotherContainer 1
(1 2
)2 3
{4 5
_logger 

.
 
Info 
( 
$" 
$str #
{# $
ServiceIdentity$ 3
}3 4
$str4 6
"6 7
)7 8
;8 9
var 
result 
= 
$" 
$str -
{- .
ServiceIdentity. =
}= >
$str> @
"@ A
;A B
var 
anotherServiceUrl 
= 
Environment &
.& '"
GetEnvironmentVariable' =
(= >
$str> Q
)Q R
;R S
var 
client 
= 
new 

HttpClient 
( 
)  
;  !
var 
response 
= 
client 
. 
GetStringAsync '
(' (
$"( *
$str* 1
{1 2
anotherServiceUrl2 C
}C D
$strD E
"E F
)F G
.G H
ResultH N
;N O
result 	
+=
 
response 
; 
result   	
+=  
 
$"   
$str   +
{  + ,
ServiceIdentity  , ;
}  ; <
$str  < >
"  > ?
;  ? @
return!! 	
result!!
 
;!! 
}"" 
}$$ 
}%% ù
RF:\Work\LetsKubeGit\Lets-Kube\3_Microservices_environment\LetKube\LetsKube\ILog.cs
	namespace 	
LetsKube
 
{ 
public 

	interface 
ILog 
{ 
void 
Information 
( 
string 
message  '
)' (
;( )
}		 
public 

class 
LogNLog 
: 
ILog 
{ 
private 
ILogger 
_logger 
;  
public 
LogNLog 
( 
ILogger 
logger %
)% &
{ 	
_logger 
= 
logger 
; 
} 	
public 
void 
Information 
(  
string  &
message' .
). /
{ 	
var 
logEventInfo 
= 
new "
LogEventInfo# /
(/ 0
LogLevel0 8
.8 9
Info9 =
,= >
$str? N
,N O
$"P R
{R S
messageS Z
}Z [
$str[ j
{j k
DateTimek s
.s t
UtcNowt z
}z {
$str{ |
"| }
)} ~
;~ 
_logger 
. 
Log 
( 
logEventInfo $
)$ %
;% &
} 	
} 
} ù
UF:\Work\LetsKubeGit\Lets-Kube\3_Microservices_environment\LetKube\LetsKube\Program.cs
	namespace 	
LetsKube
 
{ 
public 
class 
Program 
{		 
public

 
static

	 
void

 
Main

 
(

 
string

  
[

  !
]

! "
args

# '
)

' (
{

) *

LogManager 
. 
LoadConfiguration 
(  
string  &
.& '
Concat' -
(- .
	Directory. 7
.7 8
GetCurrentDirectory8 K
(K L
)L M
,M N
$strO ]
)] ^
)^ _
;_ `
CreateHostBuilder 
( 
args 
) 
. 
Build  
(  !
)! "
." #
Run# &
(& '
)' (
;( )
} 
public 
static	 
IHostBuilder 
CreateHostBuilder .
(. /
string/ 5
[5 6
]6 7
args8 <
)< =
=>> @
Host 
.  
CreateDefaultBuilder 
( 
args !
)! "
. $
ConfigureWebHostDefaults 
( 

webBuilder (
=>) +
{, -

webBuilder 
. 

UseStartup 
< 
Startup "
>" #
(# $
)$ %
;% &
} 
) 
; 
} 
} ³
UF:\Work\LetsKubeGit\Lets-Kube\3_Microservices_environment\LetKube\LetsKube\Startup.cs
	namespace 	
LetsKube
 
{ 
public 
class 
Startup 
{ 
public 
void	 
ConfigureServices 
(  
IServiceCollection  2
services3 ;
); <
{= >
services 
. 
AddControllers 
( 
) 
; 
services 
. 
AddSwaggerGen 
( 
c 
=> 
{  
c! "
." #

SwaggerDoc# -
(- .
$str. 2
,2 3
new4 7
OpenApiInfo8 C
{D E
TitleE J
=K L
$strM U
,U V
VersionW ^
=_ `
$stra e
}e f
)f g
;g h
}i j
)j k
;k l
} 
public 
void	 
	Configure 
( 
IApplicationBuilder +
app, /
,/ 0
IWebHostEnvironment1 D
envE H
)H I
{J K
if 
( 
env 	
.	 

IsDevelopment
 
( 
) 
) 
{ 
app 
. %
UseDeveloperExceptionPage !
(! "
)" #
;# $
} 
app 
. 

UseSwagger 
( 
) 
; 
app 
. 
UseSwaggerUI 
( 
c 
=> 
{ 
c 
. 
SwaggerEndpoint 
( 
$str 0
,0 1
$str2 =
)= >
;> ?
} 
) 
; 
app 
. 

UseRouting 
( 
) 
; 
app 
. 
UseEndpoints 
( 
	endpoints 
=>  
{! "
	endpoints# ,
., -
MapControllers- ;
(; <
)< =
;= >
}? @
)@ A
;A B
} 
}   
}!! 